/*-------------------------------------------------------------------
/ NOVA Open Registration Database Baseline 
/-------------------------------------------------------------------*/

DROP SCHEMA IF EXISTS nova_open;

CREATE SCHEMA IF NOT EXISTS nova_open;

USE nova_open;

CREATE TABLE IF NOT EXISTS LT_COUNTRY (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	CONSTRAINT PK_CNTRY_ID PRIMARY KEY (ID)
	);
	
CREATE TABLE IF NOT EXISTS LT_STATE (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255),
	CONSTRAINT PK_STATE_ID PRIMARY KEY (ID)
	);
	
CREATE TABLE IF NOT EXISTS LT_GAME_SYSTEM (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	CONSTRAINT PK_GAME_SYS_ID PRIMARY KEY (ID)
	);
	
CREATE TABLE IF NOT EXISTS LT_EVENT_TYPE (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	CONSTRAINT PK_EVT_TYP PRIMARY KEY (ID)
	);

CREATE TABLE IF NOT EXISTS LT_EVENT_MATERIAL_TYPE (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	CONSTRAINT PK_EVT_TYP PRIMARY KEY (ID)
	);

CREATE  TABLE IF NOT EXISTS PERSON (
	ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(20) NOT NULL,
	MIDDLE_NAME VARCHAR(20) NULL,
	LAST_NAME VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(255) NOT NULL,
	ADDRESS VARCHAR(255) NULL,
	CITY VARCHAR(50) NULL,
	STATE_ID INT NULL,
	COUNTRY_ID INT NULL,
	ZIP VARCHAR(10) NULL,
	PHONE_NUMBER VARCHAR(20) NULL,
	WEBSITE_URL VARCHAR(50) NULL,
	NOTE VARCHAR(1000) NULL,
	IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_PERSON_ID PRIMARY KEY (ID),
	CONSTRAINT FK_ST_STATE_ID FOREIGN KEY (STATE_ID)
		REFERENCES LT_STATE (ID),
	CONSTRAINT FK_CNTRY_ID FOREIGN KEY (COUNTRY_ID)
		REFERENCES LT_COUNTRY (ID)
  );

CREATE TABLE IF NOT EXISTS EVENT (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	TYPE_ID INT NOT NULL,
	GAME_SYSTEM_ID INT NULL,
	NOVA_YEAR YEAR(4) NOT NULL,
	EVENT_START DATETIME NULL,
	EVENT_END DATETIME NULL,
	IS_UNIQUE TINYINT(1) NOT NULL DEFAULT 1,
	IS_WEEKEND_BADGE_REQ TINYINT(1) NOT NULL DEFAULT 1,
	PRICE DECIMAL(5,2) NULL DEFAULT 0,
	AVAILABLE_QTY INT NULL,
	NOTE VARCHAR(1000) NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_EVENT_ID PRIMARY KEY (ID),
	CONSTRAINT FK_GAME_SYS_ID FOREIGN KEY (GAME_SYSTEM_ID)
		REFERENCES LT_GAME_SYSTEM (ID),
	CONSTRAINT FK_TYPE_ID FOREIGN KEY (TYPE_ID)
		REFERENCES LT_EVENT_TYPE (ID)
	);
	
CREATE TABLE IF NOT EXISTS CLUB (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	EMAIL VARCHAR(50) NULL,
	WEBSITE_URL VARCHAR(50) NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_CLUB_ID PRIMARY KEY (ID)
	);

CREATE TABLE IF NOT EXISTS EVENT_MATERIAL (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(255) NULL,
	MATERIAL_TYPE_ID INT NOT NULL,
	EVENT_ID INT NOT NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_E_MAT_ID PRIMARY KEY (ID),
	CONSTRAINT FK_EVENT_ID FOREIGN KEY (EVENT_ID)
		REFERENCES EVENT (ID),
	CONSTRAINT FK_MAT_TYPE_ID FOREIGN KEY (MATERIAL_TYPE_ID)
		REFERENCES LT_EVENT_MATERIAL_TYPE (ID)
	);
	
CREATE TABLE IF NOT EXISTS X_CLUB_PERSON (
	ID INT NOT NULL AUTO_INCREMENT,
	PERSON_ID INT NOT NULL,
	CLUB_ID INT NOT NULL,
	IS_LEAD TINYINT(1) NOT NULL DEFAULT 0,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_CB_P_ID PRIMARY KEY (ID),
	CONSTRAINT FK_CB_P_PERSON_ID FOREIGN KEY (PERSON_ID)
		REFERENCES PERSON (ID),
	CONSTRAINT FK_CB_P_CLUB_ID FOREIGN KEY (CLUB_ID)
		REFERENCES CLUB (ID),
	UNIQUE INDEX IDX_CB_P_PERSON_ID_CLUB_ID (PERSON_ID, CLUB_ID)
	);
	
CREATE TABLE IF NOT EXISTS REGISTRATION (
	ID INT NOT NULL AUTO_INCREMENT,
	PERSON_ID INT NOT NULL,
	EVENT_ID INT NOT NULL,
	QUANTITY INT NOT NULL DEFAULT 1,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_REGISTRATION_ID PRIMARY KEY (ID),
	CONSTRAINT FK_P_E_PERSON_ID FOREIGN KEY (PERSON_ID)
		REFERENCES PERSON (ID),
	CONSTRAINT FK_P_E_EVENT_ID FOREIGN KEY (EVENT_ID)
		REFERENCES EVENT (ID),
	INDEX IDX_R_PERSON_ID_EVENT_ID (PERSON_ID, EVENT_ID)
	);

CREATE TABLE IF NOT EXISTS TEAM (
	ID INT NOT NULL AUTO_INCREMENT,
	EVENT_ID INT NOT NULL,
	NAME VARCHAR(50) NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_TEAM_ID PRIMARY KEY (ID),
	CONSTRAINT FK_T_EVENT_ID FOREIGN KEY (EVENT_ID)
		REFERENCES EVENT (ID)
	);
	
CREATE TABLE IF NOT EXISTS X_PERSON_TEAM (
	ID INT NOT NULL AUTO_INCREMENT,
	TEAM_ID INT NOT NULL,
	PERSON_ID INT NOT NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_P_E_ID PRIMARY KEY (ID),
	CONSTRAINT FK_P_T_PERSON_ID FOREIGN KEY (PERSON_ID)
		REFERENCES PERSON (ID),
	CONSTRAINT FK_P_T_TEAM_ID FOREIGN KEY (TEAM_ID)
		REFERENCES TEAM (ID)
	);

CREATE TABLE IF NOT EXISTS EVENT_ROUND (
	ID INT NOT NULL AUTO_INCREMENT,
	EVENT_ID INT NOT NULL,
	ROUND_NUM INT NOT NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_E_R_ID PRIMARY KEY (ID),
	CONSTRAINT FK_E_EVENT_ID FOREIGN KEY (EVENT_ID)
		REFERENCES EVENT (ID)
	);

	
CREATE TABLE IF NOT EXISTS EVENT_MATCH (
	ID INT NOT NULL AUTO_INCREMENT,
	PERSON_1_ID INT NOT NULL,
	PERSON_2_ID INT NOT NULL,
	EVENT_ROUND_ID INT NOT NULL,
	RESULT_CD VARCHAR(20) NOT NULL,
	LAST_MODIFIED_BY VARCHAR(55) NOT NULL,
	LAST_MODIFIED_DATE DATETIME NOT NULL,
	CREATED_BY VARCHAR(55) NOT NULL,
	CREATED_DATE DATETIME NOT NULL,
	CONSTRAINT PK_E_M_ID PRIMARY KEY (ID),
	CONSTRAINT FK_E_M_PERSON_1_ID FOREIGN KEY (PERSON_1_ID)
		REFERENCES PERSON (ID),
	CONSTRAINT FK_E_M_PERSON_2_ID FOREIGN KEY (PERSON_2_ID)
		REFERENCES PERSON (ID),
	CONSTRAINT FK_E_M_ROUND_ID FOREIGN KEY (EVENT_ROUND_ID)
		REFERENCES EVENT_ROUND (ID),
	UNIQUE INDEX IDX_E_M_PERSON_ID_ROUND_ID (PERSON_1_ID, PERSON_2_ID, EVENT_ROUND_ID)
	);
	
CREATE TABLE IF NOT EXISTS PROPERTIES (
	ID INT NOT NULL AUTO_INCREMENT,
	PROPERTY_NAME VARCHAR(30) NOT NULL,
	PROPERTY_VALUE VARCHAR(100) NOT NULL,
	CONSTRAINT PK_PROPERTIES_ID PRIMARY KEY (ID)
	);

CREATE TABLE IF NOT EXISTS CHANGELOG (
	ID INT NOT NULL AUTO_INCREMENT,
	SCRIPT VARCHAR(100) NOT NULL,
	RUN_DATE DATETIME NOT NULL,
	CONSTRAINT PK_CHANGELOG_ID PRIMARY KEY (ID)
	);

INSERT INTO CHANGELOG (SCRIPT,RUN_DATE) VALUES('001_nova_baseline.sql',SYSDATE());
	
